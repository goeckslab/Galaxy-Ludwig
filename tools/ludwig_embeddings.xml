<tool id="embedding_extraction" name="Image Embedding Extraction" version="@VERSION@" profile="@PROFILE@">
    <description>Extract image embeddings using a deep learning model</description>
    <macros>
        <import>ludwig_macros.xml</import>
    </macros>
    <expand macro="python_requirements_gpu" />
    <expand macro="macro_stdio" />
    <version_command>echo "@VERSION@"</version_command>
    <command>
        <![CDATA[
            mkdir -p outputs &&

            # Sanitize input file name
            #if $input_zip
            sanitized_zip=$(basename "$input_zip" | sed 's/[^a-zA-Z0-9._-]/_/g') &&
            ln -sf "$input_zip" "./$sanitized_zip" &&
            unzip -o -q "./$sanitized_zip" -d ./extracted_images/;
            #end if

            sanitized_output=$(basename "embeddings.csv" | sed 's/[^a-zA-Z0-9._-]/_/g') &&

            python '$__tool_directory__/embedding_extraction.py'
                --zip_file './extracted_images'
                --model_name '$model_name'
                --output_csv "./outputs/$sanitized_output" &&
            echo "Embedding extraction is complete!"
        ]]>
    </command>
    <configfiles>
        <inputs name="inputs" />
    </configfiles>
    <inputs>
        <param name="input_zip" type="data" format="zip" label="Input Zip File (Images)" help="Provide a zip file containing images to process." />
        <param name="model_name" type="select" label="Model for Embedding Extraction" help="Select the model to use for embedding extraction.">
            <option value="resnet" selected="true">ResNet50</option>
            <option value="efficientnet">EfficientNet-B0</option>
            <option value="densenet">DenseNet121</option>
        </param>
    </inputs>
    <outputs>
            <data name="output_csv" format="csv" label="Extracted Embeddings" from_work_dir="outputs/embeddings.csv" />
    </outputs>
    <tests>
        <test>
            <param name="input_zip" value="example_images.zip" ftype="zip" />
            <param name="model_name" value="resnet" />
            <output name="output_csv" file="expected_embeddings.csv" />
        </test>
    </tests>
    <help>
        <![CDATA[
            **What it does**
            This tool extracts image embeddings using a selected deep learning model.

            **Inputs**
            - A zip file containing images to process.
            - A model selection for embedding extraction (`resnet`, `efficientnet`, or `densenet`).

            **Outputs**
            - A CSV file containing embeddings. Each row corresponds to an image, with the file name in the first column and embedding vectors in the subsequent columns.

            **Example Output:**

            file_name,dim_0,dim_1,...,dim_N
            image2.jpg,0.321,0.654,...,0.987
        ]]>
    </help>
    <expand macro="macro_citations" />
</tool>
