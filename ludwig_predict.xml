<tool id="ludwig_predict" name="Ludwig Predict" version="@VERSION@" profile="@PROFILE@">
    <description>loads a pretrained model to do prediction</description>
    <macros>
        <import>ludwig_macros.xml</import>
    </macros>
    <expand macro="python_requirements">
        <container type="docker">quay.io/qiagu/galaxy-ludwig:latest</container>
    </expand>
    <expand macro="macro_stdio" />
    <version_command>echo "@VERSION@"</version_command>
    <command>
        <![CDATA[
            mkdir -p outputs &&
            #if $dataset
            ln -sf '$dataset' "`pwd`/${dataset.element_identifier}";
            #end if
            #if $raw_data
            unzip -o -q '$raw_data' -d ./;
            #end if
            python '$__tool_directory__/ludwig_predict.py'
                #if $model_path
                --model_path '$model_path.extra_files_path'
                #end if
                #if $dataset
                --dataset "`pwd`/${dataset.element_identifier}"
                #end if
                #if $disable_parallel_threads
                --disable_parallel_threads
                #end if
                --output_directory "`pwd`/outputs"
                --data_format '$data_format'
                --split '$split'
                --backend local
                --skip_save_unprocessed_output &&
            mkdir -p '${output.extra_files_path}' &&
            cp outputs/predictions.shapes.json '${output.extra_files_path}' &&
            cp outputs/predictions.parquet '$output'

        ]]>
    </command>
    <configfiles>
        <inputs name="inputs" />
    </configfiles>
    <inputs>
        <param name="model_path" type="data" format="ludwig_model" label="Load the pretrained model" />
        <param name="dataset" type="data" format="tabular,csv,h5,json,txt" label="Input dataset" />
        <param name="data_format" type="select" label="Data format">
            <option value="auto" selected="true">auto</option>
            <option value="tsv">tsv</option>
            <option value="csv">csv</option>
            <option value="h5">h5</option>
            <option value="json">json</option>
        </param>
        <param name="split" type="select" label="Select the split portion to test the model on">
            <option value="training">training</option>
            <option value="validation">validation</option>
            <option value="test">test</option>
            <option value="full" selected="true">full</option>
        </param>
        <param name="batch_size" type="integer" value="128" optional="true" label="Batch size" />
        <param name="disable_parallel_threads" type="boolean" checked="false" label="Whether to disable parallel threads for reproducibility?" />
        <param name="raw_data" type="data" format="zip" optional="true" label="Raw data" help="Optional. Needed for images."/>
    </inputs>       
    <outputs>
        <data format="parquet" name="output" label="${tool.name} parquet on ${on_string}" />
        <collection type="list" name="output_csv" label="${tool.name} CSV on ${on_string}" >
            <discover_datasets pattern="(?P&lt;designation&gt;.+)\.csv" format="csv" directory="outputs" />
        </collection>
        <!-- <data format="csv" name="output_top_k" label="${tool.name} top K predictions on ${on_string}" /> -->
    </outputs>
    <tests>
        <test>
            <param name="model_path" value="" ftype="ludwig_model">
                <composite_data value="temp_model01/model_hyperparameters.json" />
                <composite_data value="temp_model01/model_weights" />
                <composite_data value="temp_model01/training_set_metadata.json" />
                <composite_data value="temp_model01/training_progress.json" />
            </param>
            <param name="dataset" value="temperature_la.csv" ftype="csv" />
            <param name="split" value="test" />
            <output name="output">
                <assert_contents>
                    <has_size value="72567" delta="50" />
                </assert_contents>
            </output>
            <output_collection name="output_csv">
                <element name="temperature_predictions">
                    <assert_contents>
                        <has_n_lines n="9052" />
                        <has_n_columns n="1" />
                        <has_size value="186816" delta="50" />
                    </assert_contents>
                </element>
            </output_collection>
        </test>
    </tests>
    <help>
        <![CDATA[
**What it does**



**Input**



**Output**



        ]]>
    </help>
    <citations>
        <citation type="bibtex">
        </citation>
    </citations>
</tool>
