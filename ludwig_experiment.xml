<tool id="ludwig_experiment" name="Ludwig Experiment" version="@VERSION@" profile="@PROFILE@">
    <description>trains and evaluates a model</description>
    <macros>
        <import>ludwig_macros.xml</import>
    </macros>
    <expand macro="python_requirements">
        <container type="docker">quay.io/qiagu/galaxy-ludwig:latest</container>
    </expand>
    <expand macro="macro_stdio" />
    <version_command>echo "@VERSION@"</version_command>
    <command>
        <![CDATA[
            #if $config_file
            ln -sf '$config_file' "`pwd`/config.yml";
            #end if
            #if $dataset
            ln -sf '$dataset' "`pwd`/${dataset.element_identifier}";
            #end if
            #if $training_set
            ln -sf '$training_set' "`pwd`/${training_set.element_identifier}";
            #end if
            #if $validation_set
            ln -sf '$validation_set' "`pwd`/${validation_set.element_identifier}";
            #end if
            #if $test_set
            ln -sf '$test_set' "`pwd`/${test_set.element_identifier}";
            #end if
            #if $raw_data
            unzip -o -q '$raw_data' -d ./;
            #end if
            ludwig experiment
            #if $config_file
            --config_file "`pwd`/config.yml"
            #end if
            #if $model_load_path
            --model_load_path '$model_load_path.extra_files_path'
            #end if
            #if $dataset
            --dataset "`pwd`/${dataset.element_identifier}"
            #end if
            #if $training_set
            --training_set "`pwd`/${training_set.element_identifier}"
            #end if
            #if $validation_set
            --validation_set "`pwd`/${validation_set.element_identifier}"
            #end if
            #if $test_set
            --test_set "`pwd`/${test_set.element_identifier}"
            #end if
            #if $training_set_metadata
            --training_set_metadata '$training_set_metadata'
            #end if
            #if $random_seed
            --random_seed '$random_seed'
            #end if
            #if $disable_parallel_threads
            --disable_parallel_threads
            #end if
            #if $experiment_name
            --experiment_name '$experiment_name'
            #end if
            #if $model_name
            --model_name '$model_name'
            #end if
            #if $k_fold
            --k_fold '$k_fold'
            #end if
            --output_directory "`pwd`"
            --data_format '$data_format'
            --backend local
            --skip_save_processed_input
            --skip_save_unprocessed_output
            --skip_save_k_fold_split_indices &&
            mkdir -p '$output_model.extra_files_path' &&
            cp experiment_run/model/*.json experiment_run/model/model_weights '$output_model.extra_files_path'

        ]]>
    </command>
    <configfiles>
        <inputs name="inputs" />
    </configfiles>
    <inputs>
        <param name="config_file" type="data" format="yaml,txt" label="Select the dataset containing model configuration" />
        <param name="model_load_path" type="data" format="ludwig_model" optional="true" label="Load a pretrained model" help="Optional. Used to resume training." />
        <param name="dataset" type="data" format="tabular,csv,h5,json,txt" optional="true" label="Input dataset" />
        <param name="training_set" type="data" format="tabular,csv,h5,json" optional="true" label="Input traning dataset" />
        <param name="validation_set" type="data" format="tabular,csv,h5,json" optional="true" label="Input validation dataset" />
        <param name="test_set" type="data" format="tabular,csv,h5,json" optional="true" label="Input test dataset" />
        <param name="training_set_metadata" type="data" format="json" optional="true" label="Training set metadata" />
        <param name="data_format" type="select" label="Data format">
            <option value="auto" selected="true">auto</option>
            <option value="tsv">tsv</option>
            <option value="csv">csv</option>
            <option value="h5">h5</option>
            <option value="json">json</option>
        </param>
        <param name="eval_split" type="select" label="Select the split portion for evaluation">
            <option value="training">training</option>
            <option value="validation">validation</option>
            <option value="test">test</option>
            <option value="full">full</option>
        </param>
        <param name="k_fold" type="integer" value="" optional="true" label="number of folds for a k-fold cross validation run" />
        <param name="random_seed" type="integer" value="" optional="true" label="Randonness seed" />
        <param name="disable_parallel_threads" type="boolean" checked="false" label="Whether to disable parallel threads for reproducibility?" />
        <param name="experiment_name" type="text" value="" optional="true" label="Experiment name" />
        <param name="model_name" type="text" value="" optional="true" label="Model name" />
        <param name="raw_data" type="data" format="zip" optional="true" label="Raw data" help="Optional. Needed for images."/>
    </inputs>       
    <outputs>
        <data format="ludwig_model" name="output_model" label="Trained model on ${on_string}" />
        <data format="json" name="output_description" from_work_dir="experiment_run/description.json" label="Training description on ${on_string}" />
        <data format="json" name="output_training_statistics" from_work_dir="experiment_run/training_statistics.json" label="Training statistics on ${on_string}" />
    </outputs>
    <tests>
        <test>
            <param name="dataset" value="temperature_la.csv" ftype="csv" />
            <param name="config_file" value="temperature_config.yml" ftype="yaml" />
            <param name="data_format" value="csv" />
            <output name="output_training_statistics" file="temperature_training_statistics.json" compare="sim_size" delta="10" />
        </test>
    </tests>
    <help>
        <![CDATA[
**What it does**



**Input**



**Output**



        ]]>
    </help>
    <citations>
        <citation type="bibtex">
        </citation>
    </citations>
</tool>
